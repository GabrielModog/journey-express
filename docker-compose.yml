services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: evacopilot
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  server:
    container_name: backend
    env_file: ./backend/.env
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      MONGODB_URI: "mongodb://mongodb:27017/evacopilot"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  client:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      BACKEND_URL: "http://backend:3001"
    ports:
      - "3000:3000"
    depends_on:
      server:
        condition: service_started
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  default:
    name: evacopilot-network
    driver: bridge
